buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        maven {
            url = 'https://oss.sonatype.org/content/repositories/snapshots'
        }
        maven { url 'https://maven.fabric.io/public' }



    }
    dependencies {
        // replace with the current version of the Android plugin
        // replace with the current version of the android-apt plugin
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
        classpath 'io.fabric.tools:gradle:1.+'


    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

apply plugin: 'android-apt'
def AAVersion = '4.0.0'
def AASnapshotVersion = '4.0-SNAPSHOT'


apt {
    arguments {
        androidManifestFile variant.outputs[0]?.processResources?.manifestFile
        // if you have multiple outputs (when using splits), you may want to have other index than 0

        // you should set your package name here if you are using different application IDs
        // resourcePackageName "your.package.name"

        // You can set optional annotation processing options here, like these commented options:
        // logLevel 'INFO'
        // logFile '/var/log/aa.log'
    }
}


android {
    compileSdkVersion 23
    buildToolsVersion '25.0.0'

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
    }
    defaultConfig {
        applicationId "com.fom.msesoft.fomapplication"
        minSdkVersion 14
        targetSdkVersion 24
        versionCode 1
        versionName "1.2.2.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/notice.txt'
    }
}
dependencies {

    compile 'jp.wasabeef:picasso-transformations:2.1.0'
    // If you want to use the GPU Filters
    compile 'jp.co.cyberagent.android.gpuimage:gpuimage-library:1.4.1'
    //noinspection GradleCompatible
    compile 'com.android.support:appcompat-v7:22.2.0'
    compile 'com.android.support:design:23.3.0'
    compile 'com.android.support:recyclerview-v7:23.1.1'
    apt "org.androidannotations:androidannotations:$AAVersion"
    compile "org.androidannotations:androidannotations-api:$AAVersion"
    compile 'org.springframework.android:spring-android-rest-template:1.0.1.RELEASE'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.3.2'
    apt "org.androidannotations:androidannotations:$AASnapshotVersion"
    compile "org.androidannotations:androidannotations-api:$AASnapshotVersion"
    provided 'org.projectlombok:lombok:1.12.6'
    apt "org.projectlombok:lombok:1.12.6"
    compile 'org.androidannotations:ormlite-api:4.0.0'
    apt "org.androidannotations:ormlite:4.0.0"
    compile 'org.androidannotations:rest-spring-api:4.0.0'
    apt "org.androidannotations:rest-spring:4.0.0"
    compile 'com.android.support:cardview-v7:23.3.+'
    //picasso
    compile 'com.squareup.picasso:picasso:2.4.0'
    compile 'com.flaviofaria:kenburnsview:1.0.7'
    //gcm
    compile 'com.google.android.gms:play-services-gcm:8.4.0'
    compile('com.crashlytics.sdk.android:crashlytics:2.6.5@aar') {
        transitive = true;
    }
    compile('com.crashlytics.sdk.android:crashlytics-ndk:1.1.4@aar') {
        transitive = true;
    }
    compile files('libs/badgeview.jar')
}

crashlytics {
    enableNdk true
    androidNdkOut 'src/main/obj'
    androidNdkLibsOut 'src/main/libs'
}
